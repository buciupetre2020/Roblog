caption="Sursa: Eurostat nama_10_gdp, INS EXP101F/102F") +
scale_y_percent(scale=1)
tabel %>%
filter(grupe=="Total") %>%
mutate_at(vars(import:export), ~100*./PIB) %>%
select(-grupe, -PIB) %>%
gather(import:export, key="Indicator", value="Valoare") %>%
ggplot(aes(x=ani, y=Valoare, group=Indicator)) +
geom_line(aes(colour=Indicator), size=1.2) +
scale_color_discrete(direction=-1) +
labs(title = "Procentul importurilor/exporturilor din PIB",
x=NULL, y=NULL,
caption="Sursa: Eurostat nama_10_gdp, INS EXP101F/102F") +
hrbrthemes::scale_y_percent(scale=1)
tabel %>%
filter(grupe=="Total") %>%
mutate_at(vars(import:export), ~100*./PIB) %>%
select(-grupe, -PIB) %>%
mutate(deficit = export - import) %>%
ggplot(aes(x=ani, y=deficit)) +
geom_line(colour="#EEA100", size=1.2) +
labs(title = "Deficitul comercial ca procent din PIB",
x=NULL, y=NULL, caption="Figura I.3") +
hrbrthemes::scale_y_percent(scale=1)
tabel %>%
filter(grupe=="Total") %>%
mutate_at(vars(import:export), ~100*./PIB) %>%
select(-grupe, -PIB) %>%
mutate(deficit = export - import) %>%
ggplot(aes(x=ani, y=deficit)) +
geom_col(fill="#EEA100") +
labs(title = "Deficitul comercial ca procent din PIB",
x=NULL, y=NULL,
caption="Sursa: Eurostat nama_10_gdp, INS EXP101F/102F") +
hrbrthemes::scale_y_percent(scale=1)
tabel %>%
filter(grupe=="Total") %>%
mutate_at(vars(import:export), ~100*./PIB) %>%
select(-grupe, -PIB) %>%
mutate(deficit = export - import) %>%
ggplot(aes(x=ani, y=deficit)) +
geom_col(fill="#EEA100") +
labs(title = "Deficitul comercial", subtitle="ca % din PIB",
x=NULL, y=NULL,
caption="Sursa: Eurostat nama_10_gdp, INS EXP101F/102F") +
hrbrthemes::scale_y_percent(scale=1)
tabel %>%
filter(grupe!="Total", ani==2020) %>%
arrange(desc(export)) %>% select(-ani, -PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
DT::datatable(extensions = 'Buttons',
options = list(dom = 'Bfrtip', buttons = c('copy', 'print', 'csv', 'pdf')))
tabel
tabel %>% pull(ani)
tabel %>% pull(ani) %>% unique()
tabel %>%
filter(grupe!="Total", ani==2022) %>%
arrange(desc(export)) %>% select(-ani, -PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
DT::datatable(extensions = 'Buttons',
options = list(dom = 'Bfrtip', buttons = c('copy', 'print', 'csv', 'pdf')))
tabel %>%
filter(grupe!="Total") %>%
arrange(desc(export)) %>% select(-PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
arrange(desc(Deficit)) %>% group_by(ani) %>%
mutate(ratio = 100*Deficit/sum(Deficit, na.rm=T)) %>%
select(Grupe, ratio, ani) %>% filter(ani%in%c(2010, 2020)) %>%
spread(ani, ratio) %>% mutate(delta = `2020`-`2010`) %>%
arrange(desc(delta)) %>% mutate_at(2:4, ~round(., digits=3)) %>%
DT::datatable(extensions = 'Buttons', options = list(dom = 'Bfrtip',
buttons = c('copy', 'print', 'csv', 'pdf')))
tabel %>%
filter(grupe!="Total") %>%
arrange(desc(export)) %>% select(-PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
arrange(desc(Deficit)) %>% group_by(ani) %>%
mutate(ratio = 100*Deficit/sum(Deficit, na.rm=T)) %>%
select(Grupe, ratio, ani) %>% filter(ani%in%c(2010, 2020)) %>%
spread(ani, ratio) %>% mutate(delta = `2020`-`2010`) %>%
arrange(desc(delta)) %>% mutate_at(2:4, ~round(., digits=3)) %>% filter(abs(delta)>1)
tabel %>%
filter(grupe!="Total") %>%
arrange(desc(export)) %>% select(-PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
arrange(desc(Deficit)) %>% group_by(ani) %>%
mutate(ratio = 100*Deficit/sum(Deficit, na.rm=T)) %>%
select(Grupe, ratio, ani) %>% filter(ani%in%c(2010, 2020)) %>%
spread(ani, ratio) %>% mutate(delta = `2020`-`2010`) %>%
arrange(desc(delta)) %>% mutate_at(2:4, ~round(., digits=3)) %>% filter(abs(delta)>2)
tabel %>%
filter(grupe!="Total") %>%
arrange(desc(export)) %>% select(-PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
arrange(desc(Deficit)) %>% group_by(ani) %>%
mutate(ratio = 100*Deficit/sum(Deficit, na.rm=T)) %>%
select(Grupe, ratio, ani) %>% filter(ani%in%c(2010, 2020)) %>%
spread(ani, ratio) %>% mutate(delta = `2020`-`2010`) %>%
arrange(desc(delta)) %>% mutate_at(2:4, ~round(., digits=3)) %>% filter(abs(delta)>2) %>% gt::t() %>% gtExtras::gt_theme_538()
tabel %>%
filter(grupe!="Total") %>%
arrange(desc(export)) %>% select(-PIB) %>%
rename(Grupe=grupe, Import=import, Export=export) %>%
mutate(Deficit = Export - Import) %>%
arrange(desc(Deficit)) %>% group_by(ani) %>%
mutate(ratio = 100*Deficit/sum(Deficit, na.rm=T)) %>%
select(Grupe, ratio, ani) %>% filter(ani%in%c(2010, 2020)) %>%
spread(ani, ratio) %>% mutate(delta = `2020`-`2010`) %>%
arrange(desc(delta)) %>% mutate_at(2:4, ~round(., digits=3)) %>% filter(abs(delta)>2) %>% gt::gt() %>% gtExtras::gt_theme_538()
tempo_bulk(codes=c("EXP102G"), directory=here::here("data/post-6"))
#tempo_bulk(codes=c("EXP102G"), directory=here::here("data/post-6"))
exp <- read_csv(here::here("data/post-6/EXP101B.csv")) %>%
set_names(c("tari", "ani", "valuta", "valoare")) %>%
filter(tari!="Total", grepl("EURO", valuta)) %>%
select(-valuta) %>% mutate(ani = parse_number(ani)) %>%
rename(export=valoare)
imp <- read_csv(here::here("data/post-6/EXP102E.csv")) %>%
set_names(c("tari", "ani", "valuta", "valoare")) %>%
filter(tari!="Total", grepl("EURO", valuta)) %>%
select(-valuta) %>% mutate(ani = parse_number(ani)) %>%
rename(import=valoare)
imp_2 <- read_csv(here::here("data/post-6/EXP102G.csv")) %>%
set_names(c("tari", "ani", "valuta", "valoare")) %>%
filter(tari!="Total", grepl("EURO", valuta)) %>%
select(-valuta) %>% mutate(ani = parse_number(ani)) %>%
rename(import=valoare)
imp <- imp %>% bind_rows(imp_2)
tabel <- inner_join(exp, imp) %>% mutate(delta = export-import)
tabel
tabel %>% mutate(export = export/1000) %>%
filter(ani==2022) %>% arrange(desc(export)) %>%
slice(1:20) %>% mutate(tari=fct_reorder(tari, export)) %>%
ggplot(aes(x=tari, y=export)) +
geom_col(fill="steelblue3") + coord_flip() + scale_y_comma() +
labs(title = "Cei mai importanți parteneri de export pentru România",
y="Milioane EURO", x=NULL,
caption="Sursa: INS EXP101B/102E/102G")
tabel %>% mutate(export = export/1000) %>%
filter(ani==2022) %>% arrange(desc(export)) %>%
slice(1:20) %>% mutate(tari=fct_reorder(tari, export)) %>%
ggplot(aes(x=tari, y=export)) +
geom_col(fill="steelblue3") + coord_flip() +
hrbrthemes::scale_y_comma() +
labs(title = "Cei mai importanți parteneri de export pentru România",
y="Milioane EURO", x=NULL,
caption="Sursa: INS EXP101B/102E/102G")
tabel %>% mutate(import = import/1000) %>%
filter(ani==2020) %>% arrange(desc(import)) %>%
slice(1:20) %>% mutate(tari=fct_reorder(tari, import)) %>%
ggplot(aes(x=tari, y=import)) +
geom_col(fill="#EEA100") + coord_flip() + hrbrthemes::scale_y_comma() +
labs(title = "Cei mai importanți parteneri de import pentru România",
y="Milioane EURO", x=NULL, caption="Sursa: INS EXP101B/102E/102G")
tabel %>% rename(deficit=delta) %>% mutate(deficit=deficit/1000) %>%
filter(ani==2022) %>% arrange(desc(abs(deficit))) %>%
slice(1:20) %>% mutate(tari=fct_reorder(tari, deficit)) %>%
mutate(index = deficit>0) %>%
ggplot(aes(x=tari, y=deficit)) +
geom_col(aes(fill=index), show.legend = FALSE) +
coord_flip() + scale_y_comma() +
labs(title = "Balanța comercială după parteneri",
y="Milioane EURO", x=NULL, caption="Sursa: INS EXP101B/102E/102G")
tabel %>% rename(deficit=delta) %>% mutate(deficit=deficit/1000) %>%
filter(ani==2022) %>% arrange(desc(abs(deficit))) %>%
slice(1:20) %>% mutate(tari=fct_reorder(tari, deficit)) %>%
mutate(index = deficit>0) %>%
ggplot(aes(x=tari, y=deficit)) +
geom_col(aes(fill=index), show.legend = FALSE) +
coord_flip() + hrbrthemes::scale_y_comma() +
labs(title = "Balanța comercială după parteneri",
y="Milioane EURO", x=NULL, caption="Sursa: INS EXP101B/102E/102G") +
scale_fill_tableau()
tec <- get_eurostat(id="ext_tec03") %>%
label_eurostat() %>%
filter(grepl("Thousand", unit)) %>% select(-unit)
tec
tec %>% arrange(desc(time))
#| fig-width: 10
#| fig-height: 8
#| fig-dpi: 200
tec <- get_eurostat(id="ext_tec03") %>%
label_eurostat() %>%
filter(grepl("Thousand", unit)) %>% select(-unit)
network <- tec %>%
filter(grepl("Total - all NACE", nace_r2),
grepl("2021", time), stk_flow=="Exports") %>%
select(geo, partner, values) %>%
rename(from = geo,
to = partner) %>%
mutate(from = gsub("Germany.*", "Germany", from),
to = gsub("Germany.*", "Germany", to)) %>%
filter(!from%in%c("Cyprus", "Luxembourg", "Malta", "Ireland")) %>%
filter(to%in%from)
retea_prel <- network %>% group_by(from) %>%
arrange(desc(values)) %>% top_n(5) %>%
ungroup() %>% tidygraph::as_tbl_graph()
network_plot <- retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea), size=12,
show.legend = F) +
scale_color_brewer(palette="Spectral") +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm"))
network_plot
network_plot
tec
tec %>% count(time)
#| fig-width: 10
#| fig-height: 8
#| fig-dpi: 200
tec <- get_eurostat(id="ext_tec03") %>%
label_eurostat() %>%
filter(grepl("Thousand", unit)) %>% select(-unit)
network <- tec %>%
filter(grepl("Total - all NACE", nace_r2),
grepl("2020", time), stk_flow=="Exports") %>%
select(geo, partner, values) %>%
rename(from = geo,
to = partner) %>%
mutate(from = gsub("Germany.*", "Germany", from),
to = gsub("Germany.*", "Germany", to)) %>%
filter(!from%in%c("Cyprus", "Luxembourg", "Malta", "Ireland")) %>%
filter(to%in%from)
retea_prel <- network %>% group_by(from) %>%
arrange(desc(values)) %>% top_n(5) %>%
ungroup() %>% tidygraph::as_tbl_graph()
network_plot <- retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea), size=12,
show.legend = F) +
scale_color_brewer(palette="Spectral") +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm"))
network_plot
network_plot
#| fig-width: 10
#| fig-height: 8
#| fig-dpi: 200
#deficite cu partenerii
deficite_network <- tec %>%
filter(grepl("Total - all NACE", nace_r2),
grepl("2020", time)) %>%
spread(stk_flow, values) %>%
mutate(deficit = Exports - Imports) %>%
select(geo, partner, deficit) %>%
rename(from = geo,
to = partner) %>%
mutate(from = gsub("Germany.*", "Germany", from),
to = gsub("Germany.*", "Germany", to)) %>%
filter(!from%in%c("Cyprus", "Luxembourg", "Malta", "Ireland")) %>%
filter(to%in%from)
deficite_prel <- deficite_network %>%
group_by(from) %>%
arrange(((deficit))) %>%
filter(row_number() <=5) %>%
ungroup() %>%
as_tbl_graph()
deficite_net_plot <- deficite_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="kk") +
geom_edge_fan(aes(edge_alpha=abs(deficit)),
arrow = arrow(length = unit(3, 'mm')),
start_cap = circle(6, 'mm'),
end_cap = circle(6, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea), size=14, show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.size=unit(0.4, "cm"))
deficite_net_plot
deficite_net_plot
#| fig-width: 10
#| fig-height: 8
#| fig-dpi: 200
tec <- get_eurostat(id="ext_tec03") %>%
label_eurostat() %>%
filter(grepl("Thousand", unit)) %>% select(-unit)
network <- tec %>%
filter(grepl("Total - all NACE", nace_r2),
grepl("2020", time), stk_flow=="Exports") %>%
select(geo, partner, values) %>%
rename(from = geo,
to = partner) %>%
mutate(from = gsub("Germany.*", "Germany", from),
to = gsub("Germany.*", "Germany", to)) %>%
filter(!from%in%c("Cyprus", "Luxembourg", "Malta", "Ireland")) %>%
filter(to%in%from)
retea_prel <- network %>% group_by(from) %>%
arrange(desc(values)) %>% top_n(5) %>%
ungroup() %>% tidygraph::as_tbl_graph()
network_plot <- retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea), size=14,
show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm"))
network_plot
network_plot
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea,
size=centralitatea), size=14,
show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm"))
?geom_node_point
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea,
size=centralitatea), size=14,
show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm"))
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea,
size=centralitatea),
show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm"))
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea = as.factor(round(centrality_eigen(),1))) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea,
size=centralitatea),
show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm")) +
scale_size_continuous(range=c(10, 20))
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea1 = as.factor(round(centrality_eigen(),1)), centralitate = centrality_eigen()) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea1,
size=centralitate),
show.legend = F) +
scale_color_tableau() +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm")) +
scale_size_continuous(range=c(10, 20))
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea1 = as.factor(round(centrality_eigen(),1)), centralitate = centrality_eigen()) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea1,
size=centralitate),
show.legend = F) +
scale_color_tableau(type = "sequential") +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm")) +
scale_size_continuous(range=c(10, 20))
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea1 = as.factor(round(centrality_eigen(),1)), centralitate = centrality_eigen()) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea1,
size=centralitate),
show.legend = F) +
scale_color_tableau(type = "ordered-sequential") +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm")) +
scale_size_continuous(range=c(10, 20))
retea_prel %>%
activate(nodes) %>%
mutate(centralitatea1 = as.factor(round(centrality_eigen(),1)), centralitate = centrality_eigen()) %>%
ggraph(layout="fr") +
geom_edge_fan(aes(edge_alpha=values),
arrow = arrow(length = unit(2, 'mm')),
start_cap = circle(5, 'mm'),
end_cap = circle(5, 'mm'), show.legend=FALSE) +
geom_node_point(aes(colour=centralitatea1,
size=centralitate),
show.legend = F) +
scale_color_tableau(type = "ordered-sequential", palette = "Green-Gold") +
geom_node_text(aes(label = name), size=2.8) +
theme_graph() +
theme(legend.key.height = unit(0.4, "cm"),
legend.key.width = unit(0.4, "cm")) +
scale_size_continuous(range=c(10, 20))
TEMPO::tempo_bulk(codes=c("EXP101O", "EXP102O", "EXP101R", "EXP102R"),
directory=here::here("data/post-6"))
#| fig-width: 8
#| fig-height: 6
#| fig-dpi: 200
#TEMPO::tempo_bulk(codes=c("EXP101O", "EXP102O", "EXP101R", "EXP102R"),
#                  directory=here::here("data/post-6"))
fmimp <- read_csv(here::here("data/post-6/EXP102O.csv"))
fmexp <- read_csv(here::here("data/post-6/EXP101O.csv"))
fmimp %>%
set_names(c("clase", "ani", "unitate", "valoare")) %>%
filter(clase!="Total") %>% mutate(ani = parse_number(ani)) %>%
ggplot(aes(x=ani, y=valoare, group=clase)) +
geom_line(aes(colour=clase), size=1.2) +
scale_y_comma() +
labs(title = "Caracteristicile de mărime ale firmelor importatoare",
x=NULL, y=NULL, caption="Sursa: INS EXP102O/EXP101O") +
facet_wrap(~unitate, ncol=2, scales="free") +
theme(legend.position="top")
fmimp %>%
set_names(c("clase", "ani", "unitate", "valoare")) %>%
filter(clase!="Total") %>% mutate(ani = parse_number(ani)) %>%
ggplot(aes(x=ani, y=valoare, group=clase)) +
geom_line(aes(colour=clase), size=1.2) +
hrbrthemes::scale_y_comma() +
labs(title = "Caracteristicile de mărime ale firmelor importatoare",
x=NULL, y=NULL, caption="Sursa: INS EXP102O/EXP101O") +
facet_wrap(~unitate, ncol=2, scales="free") +
theme(legend.position="top") +
scale_color_tableau()
fmexp %>%
set_names(c("clase", "ani", "unitate", "valoare")) %>%
filter(clase!="Total") %>% mutate(ani = parse_number(ani)) %>%
ggplot(aes(x=ani, y=valoare, group=clase)) +
geom_line(aes(colour=clase), size=1.2) +
hrbrthemes::scale_y_comma() +
labs(title = "Caracteristicile de mărime ale firmelor exportatoare",
x=NULL, y=NULL, caption="Sursa: INS EXP101O/102O") +
facet_wrap(~unitate, ncol=2, scales="free") +
theme(legend.position="top") +
scale_color_tableau()
tempo_bulk(codes=c("EXP102R", "EXP101R"), directory=here::here("data/post-6"))
fmimp
fmimp
extrafont::font_import("/home/petre/.local/share/fonts")
extrafont::font_import("/home/petre/.local/share/fonts/")
470000*120
470000*120/1000
